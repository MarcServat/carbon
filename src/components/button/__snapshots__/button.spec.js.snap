// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button when only the "iconPosition" and "iconType" props are passed into the component renders the default props and children to match the snapshot with the Icon after children 1`] = `
.c2 {
  display: inline-block;
  position: relative;
  color: #008200;
  background-color: transparent;
  vertical-align: middle;
}

.c2:hover {
  color: #006800;
  background-color: transparent;
}

.c2::before {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: CarbonIcons;
  content: "\\e928";
  font-size: 16px;
  font-style: normal;
  font-weight: normal;
  line-height: 16px;
  vertical-align: middle;
  display: block;
}

.c0 {
  padding-left: 24px;
  padding-right: 24px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex-flow: wrap;
  -ms-flex-flow: wrap;
  flex-flow: wrap;
  border-radius: 0;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  outline-offset: 0;
  border: 2px solid transparent;
  box-sizing: border-box;
  font-weight: 600;
  -webkit-text-decoration: none;
  text-decoration: none;
  background: transparent;
  border-color: #008200;
  color: #008200;
  font-size: 14px;
  min-height: 40px;
}

.c0:focus {
  outline: solid 3px #FFB500;
}

.c0:hover {
  background: #006300;
  border-color: #006300;
  color: #FFFFFF;
}

.c0:hover .c1 {
  color: #FFFFFF;
}

.c0 .c1 {
  margin-left: 8px;
  margin-right: 0px;
  margin-bottom: 0px;
  height: 16px;
}

.c0 .c1 svg {
  margin-top: 0;
}

<button
  className="c0"
  data-component="button"
  disabled={false}
  draggable={false}
  role="button"
  size="medium"
  type="button"
>
  <span>
    <span
      data-element="main-text"
    >
      foo
    </span>
  </span>
  <span
    className="c1 c2"
    data-component="icon"
    data-element="filter"
    disabled={false}
    fontSize="small"
    type="filter"
  />
</button>
`;

exports[`Button when only the "iconPosition" and "iconType" props are passed into the component renders the default props and children to match the snapshot with the Icon before children 1`] = `
.c2 {
  display: inline-block;
  position: relative;
  color: #008200;
  background-color: transparent;
  vertical-align: middle;
}

.c2:hover {
  color: #006800;
  background-color: transparent;
}

.c2::before {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: CarbonIcons;
  content: "\\e928";
  font-size: 16px;
  font-style: normal;
  font-weight: normal;
  line-height: 16px;
  vertical-align: middle;
  display: block;
}

.c0 {
  padding-left: 24px;
  padding-right: 24px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex-flow: wrap;
  -ms-flex-flow: wrap;
  flex-flow: wrap;
  border-radius: 0;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  outline-offset: 0;
  border: 2px solid transparent;
  box-sizing: border-box;
  font-weight: 600;
  -webkit-text-decoration: none;
  text-decoration: none;
  background: transparent;
  border-color: #008200;
  color: #008200;
  font-size: 14px;
  min-height: 40px;
}

.c0:focus {
  outline: solid 3px #FFB500;
}

.c0:hover {
  background: #006300;
  border-color: #006300;
  color: #FFFFFF;
}

.c0:hover .c1 {
  color: #FFFFFF;
}

.c0 .c1 {
  margin-left: 0px;
  margin-right: 8px;
  margin-bottom: 0px;
  height: 16px;
}

.c0 .c1 svg {
  margin-top: 0;
}

<button
  className="c0"
  data-component="button"
  disabled={false}
  draggable={false}
  role="button"
  size="medium"
  type="button"
>
  <span
    className="c1 c2"
    data-component="icon"
    data-element="filter"
    disabled={false}
    fontSize="small"
    type="filter"
  />
  <span>
    <span
      data-element="main-text"
    >
      foo
    </span>
  </span>
</button>
`;
